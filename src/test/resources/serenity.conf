headless.mode = false

environments {
  chrome {
    webdriver {
      driver = chrome
      autodownload = true
      capabilities {
        browserName = "chrome"
        acceptInsecureCerts = true
        "goog:chromeOptions" {
          args = ["test-type", "ignore-certificate-errors", "headless", "--window-size=1000,800"
            "incognito", "disable-infobars", "disable-gpu", "disable-default-apps", "disable-popup-blocking"]
        }
      }
    }
  }
  edge {
    webdriver {
      capabilities {
        browserName = "MicrosoftEdge"
        "ms:edgeOptions" {
          args = ["test-type", "ignore-certificate-errors", "headless",
            "incognito", "disable-infobars", "disable-gpu", "disable-default-apps", "disable-popup-blocking"]
        }
      }
    }
  }
  firefox {
    webdriver {
      capabilities {
        browserName = "firefox"
        pageLoadStrategy = "normal"
        acceptInsecureCerts = true
        unhandledPromptBehavior = "dismiss"
        strictFileInteractability = true

        "moz:firefoxOptions" {
          args = ["-headless"],
          prefs {
            "javascript.options.showInConsole": false
          },
          log {"level": "info"},
        }
      }
    }
  }

  remote {
     webdriver {
       driver = remote
       remote {
         String gridAddress = "jenkins_selenium-chrome-server_1";
         url="http://" + gridAddress + ":4444/wd/hub"
         driver=chrome
       }
      }
    }
  }

}

; The squiggly lines in the orange bars (indicating broken tests) are for accessiblity.
; To activate these, you will need the following setting
serenity {
    report {
       accessibility = true
    }
}

; This section gives a breakdown by capability (or by however you have decided to group your features).
; You can define the requirements types used in your project using the serenity.requirement.types property, e.g.
serenity {
  requirement {
    types = "epic, feature"
  }
}

; The Key Statistics section shows execution times and the overall number of test scenarios and test cases.
; You can define the ranges of duration values that appear in the report

serenity{
  report {
    durations = "1,2,4,8,15,30,60"
  }
}

; It also lists the tags appearing in the features.
;  You can exclude tags you don't want to appear in this section (for example, technical tags)

serenity {
    report {
        exclude.tags = "resetappstate,singlebrowser,manual"
    }
}

sysinfo {
  lead = Daisy
  build = "${env.BUILD_NUMBER}"
  Test Run {
    Run By = "${env.USER}"
    Java Version = "${java.version}"
  }
}








serenity {
  project.name = "Project with Remote(selenoid) and Local browsers"
  console.colors = true
  logging = VERBOSE
  take.screenshots = AFTER_EACH_STEP
}

; environment = selenoid
;
; environments {
;   selenoid {
;     webdriver {
;       driver = remote
;       remote.url = "http://localhost:4444/wd/hub"
;       capabilities {
;         browserName = "chrome"
;         browserVersion = "118.0"
;         "selenoid:options" {
;             enableVNC = true
;             enableVideo = false
;             sessionTimeout = 10m
;             timeZone = America/Los_Angeles
;           }
;         "goog:chromeOptions" {
;             args = ["--remote-allow-origins=*", "disable-gpu", "disable-setuid-sandbox", "disable-dev-shm-usage"]
;             prefs {
;               profile.profile_default_content_settings.popups = 0
;               profile.default_content_setting_values.notifications = 1
;              }
;           }
;         timeouts {
;            #script = 30000
;            #pageLoad = 300000
;            implicit = 5000
;          }
;       }
;     }
;   }
;   local {
;     webdriver {
;       driver = chrome
;       capabilities {
;         "goog:chromeOptions" {
;             args = ["--remote-allow-origins=*", "disable-gpu", "disable-setuid-sandbox", "disable-dev-shm-usage"]
;             prefs {
;               profile.profile_default_content_settings.popups = 0
;               profile.default_content_setting_values.notifications = 1
;              }
;           }
;         timeouts {
;            #script = 30000
;            #pageLoad = 300000
;            implicit = 5000
;          }
;       }
;     }
;   }
; }








