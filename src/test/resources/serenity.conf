jira.url = "https://thucydides.atlassian.net/"

serenity {
#  take.screenshots = FOR_FAILURES
  take.screenshots =  AFTER_EACH_STEP
  tag.failures = "true"
  linked.tags = "issue"
  #browser {
  #  width = 1366
  #  height = 1080
  #}
  report {
    accessibility = true
    durations = "1,2,4,8,15,30,60"
    tagtypes = "capability,feature"
    hide.empty.requirements = true
    exclude.tags = "resetappstate,singlebrowser,manual"
  }
  sysinfo {
    lead = Mehmet
    build = "${env.BUILD_NUMBER}"
    Test Run {
      Run By = "${env.USER}"
      Java Version = "${java.version}"
    }
  }
  requirement {
      types = "epic, feature"
    }
}
environment = chrome
environments {
      chrome {
        webdriver {
          driver = "chrome"
          capabilities {
            browserName = "chrome"
            "goog:chromeOptions" {
              args = ["test-type", "ignore-certificate-errors", "start-maximized"
                "incognito", "disable-infobars", "disable-gpu", "disable-default-apps", "disable-popup-blocking"]
            }
          }
        }
      }
      edge {
        webdriver {
          capabilities {
            browserName = "MicrosoftEdge"
            "ms:edgeOptions" {
              args = ["test-type", "ignore-certificate-errors", "headless",
                "incognito", "disable-infobars", "disable-gpu", "disable-default-apps", "disable-popup-blocking"]
            }
          }
        }
      }
      firefox {
        webdriver {
          //      driver = "firefox"
          capabilities {
            browserName = "firefox"

            timeouts {
              implicit = 1000
              script = 1000
              pageLoad = 1000
            }
            pageLoadStrategy = "normal"
            acceptInsecureCerts = true
            unhandledPromptBehavior = "dismiss"
            strictFileInteractability = true

            "moz:firefoxOptions" {
              args = ["-headless"],
              prefs {
                "dom.ipc.processCount": 8,
                "javascript.options.showInConsole": false
              },
              log {"level": "trace"},
              env {
                "MOZ_LOG": "nsHttp:5",
              }
            }
          }
        }
      }
       default {
          webdriver.base.wikipedia.url = "https://www.wikipedia.org/"
          baseURI="https://petstore.swagger.io/v2"
        }
        dev {
          webdriver.base.url = "https://opensource-demo.orangehrmlive.com/dev"
        }
        staging {
          webdriver.base.url = "https://opensource-demo.orangehrmlive.com/staging"
        }
        prod {
          webdriver.base.url = "https://opensource-demo.orangehrmlive.com/prod"
        }

}